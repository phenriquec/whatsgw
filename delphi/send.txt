function EnviarWhats(Destino, Mensagem: string): string;
{Colaboração: Thiago Benko - benkoms@gmail.com}
var
  Json: string;
  sResposta: string;
  JsonEnvio: TStringStream;
  idHTTP: TidHTTP;
begin
  Json := '{' +
    '"apikey" : "INFORME AQUI A APIKEY",' +
    '"phone_number" : "INFORME O CELULAR ORIGEM",' +
    '"contact_phone_number" : "' + Destino + '",' +
    '"message_custom_id" : "INFORME O CUSTOMID",' +
    '"message_type" : "text",' +
    '"message_body" : "' + Mensagem + '",' +
    '"check_status" : "1"' +
    '}';

  idHTTP := TidHTTP.Create;
  JsonEnvio := TStringStream.Create(utf8Encode(Json));

  try
    idHTTP.Request.UserAgent := 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36';
    idHTTP.Request.ContentType := 'application/json';
    idHTTP.Request.CharSet := 'utf-8';

    try
      sResposta := idHTTP.Post('https://app.whatsgw.com.br/api/WhatsGw/Send', JsonEnvio);
    except
      on E: Exception do
        ShowMessage('Error on request:' + e.Message);
    end;
  finally
    idHTTP.Free;
    JsonEnvio.Free;
  end;
  
  Result := sResposta;
end;


function SendToWhatsapp(sSend, sContact, sID, sType, sBody: string): string;
var
    cURL, cAPIKey, vURL: string;
    IdHTTP1 : TIdHTTP;
begin
    // cria o objeto
    IdHTTP1 := TIdHTTP.Create;

    // define o navegador
    IdHTTP1.Request.UserAgent := 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36';

    // preenche as constantes
    cURL    := 'https://app.whatsgw.com.br/api/WhatsGw/Send?'; // URL constante do site
    cAPIKey := 'sua-apikey-gerada-no-whatsgw';  // APIKey gerada no WhatsGw

    // substitui todos os espaços na sentença por seu código hex
    sBody := StringReplace(sBody, ' ', '%20', [rfReplaceAll]);

    // monta a URL final a partir dos dados informados
    vURL := cURL
            + 'apikey='                + cAPIKey
            + '&phone_number='         + sSend
            + '&contact_phone_number=' + sContact
            + '&message_custom_id='    + sID
            + '&message_type='         + sType
            + '&message_body='         + sBody
            ;

   	try
        // faz o pedido e armazena a resposta do servidor
		Result := IdHTTP1.Get(vURL);

        // exibe uma mentagem com a resposta do servidor
		//WriteLn(result);
	except
        // captura o erro encontrado, caso haja
		on E: Exception do
            // exibe a mensagem com o erro
			Writeln(E.ClassName, ': ', E.Message);
	end;

    // descarrega o objeto
    IdHTTP1.Free();
end;
###############


